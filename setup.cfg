[metadata]
name = openpypi
version = attr: openpypi._version.__version__
description = A comprehensive Python package creation, testing, and publishing platform
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/openpypi/openpypi
project_urls =
    Bug Tracker = https://github.com/openpypi/openpypi/issues
    Documentation = https://openpypi.readthedocs.io
    Source Code = https://github.com/openpypi/openpypi
author = Nik Jois
author_email = nikjois@llamasearch.ai
license = MIT
license_files = LICENSE
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Software Development :: Build Tools
    Topic :: Software Development :: Code Generators
    Framework :: FastAPI
    Framework :: Pydantic
    Environment :: Console
    Environment :: Web Environment

[options]
packages = find:
package_dir =
    = src
python_requires = >=3.8
include_package_data = True
zip_safe = False
install_requires =
    fastapi>=0.104.1
    uvicorn[standard]>=0.24.0
    pydantic>=2.5.0
    pydantic-settings>=2.1.0
    sqlalchemy>=2.0.23
    click>=8.1.7
    rich>=13.7.0
    jinja2>=3.1.2
    python-dotenv>=1.0.0
    pyyaml>=6.0.1
    toml>=0.10.2
    structlog>=23.2.0

[options.packages.find]
where = src

[options.extras_require]
dev =
    pytest>=7.4.3
    pytest-asyncio>=0.21.1
    pytest-cov>=4.1.0
    black>=23.11.0
    isort>=5.12.0
    flake8>=6.1.0
    mypy>=1.7.1
    pre-commit>=3.6.0
    bandit>=1.7.5
    safety>=2.3.5
test =
    pytest>=7.4.3
    pytest-asyncio>=0.21.1
    pytest-cov>=4.1.0
    pytest-xdist>=3.5.0
    pytest-mock>=3.12.0
    coverage>=7.3.2
docs =
    sphinx>=7.2.6
    sphinx-rtd-theme>=1.3.0
    myst-parser>=2.0.0
aws =
    boto3>=1.34.0
gcp =
    google-cloud-storage>=2.10.0
azure =
    azure-storage-blob>=12.19.0
ai =
    openai>=1.3.0
    tiktoken>=0.5.1
all =
    boto3>=1.34.0
    google-cloud-storage>=2.10.0
    azure-storage-blob>=12.19.0
    openai>=1.3.0
    tiktoken>=0.5.1

[options.entry_points]
console_scripts =
    openpypi = openpypi.cli:main
    openpypi-server = openpypi.api.app:main
    openpypi-generate = openpypi.core.generator:main

# Flake8 configuration
[flake8]
max-line-length = 100
max-complexity = 12
exclude =
    .git,
    __pycache__,
    .pytest_cache,
    .coverage,
    htmlcov,
    dist,
    build,
    *.egg-info,
    venv,
    .venv,
    migrations,
    node_modules,
    tests/fixtures
extend-ignore =
    # Black compatibility
    E203,  # whitespace before ':'
    W503,  # line break before binary operator
    W504,  # line break after binary operator
    # Other ignores
    E501,  # line too long (handled by black)
    F401,  # imported but unused (handled by autoflake)
    F841,  # local variable assigned but never used
select =
    E,    # pycodestyle errors
    W,    # pycodestyle warnings
    F,    # pyflakes
    C,    # mccabe complexity
    B,    # flake8-bugbear
    I,    # flake8-import-order
    D,    # flake8-docstrings
    A,    # flake8-annotations
per-file-ignores =
    # Tests don't need docstrings
    tests/*:D
    # Init files don't need docstrings
    */__init__.py:D104
    # CLI modules may have long lines
    src/openpypi/cli.py:E501
    # Configuration files may have long lines
    src/openpypi/core/config.py:E501
# Import order settings
import-order-style = google
application-import-names = openpypi
# Docstring settings
docstring-convention = google
# Annotations settings
mypy-init-return = True

# Coverage configuration (backup - main config is in pyproject.toml)
[coverage:run]
source = src
branch = True
omit =
    */tests/*
    */test_*
    */__main__.py
    */conftest.py
    */migrations/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    except ImportError:
ignore_errors = True
show_missing = True
precision = 2

[coverage:html]
directory = htmlcov

# Tool-specific configurations
[tool:pytest]
# Pytest configuration (backup - main config is in pyproject.toml)
minversion = 7.0
addopts = 
    --strict-markers
    --strict-config
    --cov=src/openpypi
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --tb=short
    --maxfail=3
    -ra
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
markers =
    slow: marks tests as slow
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    cli: marks tests as CLI tests
    security: marks tests as security tests
    performance: marks tests as performance tests
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Bandit security configuration (backup)
[bandit]
exclude_dirs = tests,migrations,venv,.venv
skips = B101,B601

# MyPy configuration (backup - main config is in pyproject.toml)
[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
strict_optional = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
show_error_codes = True
show_column_numbers = True

[mypy-docker.*]
ignore_missing_imports = True

[mypy-pygithub.*]
ignore_missing_imports = True

[mypy-structlog.*]
ignore_missing_imports = True

[mypy-rich.*]
ignore_missing_imports = True

[mypy-typer.*]
ignore_missing_imports = True

[mypy-click.*]
ignore_missing_imports = True

[mypy-prometheus_fastapi_instrumentator.*]
ignore_missing_imports = True

# Setuptools configuration
[bdist_wheel]
universal = 0

[sdist]
formats = gztar

# Additional quality settings
[pydocstyle]
convention = google
add-ignore = D100,D104,D105,D107,D200,D203,D212,D213,D214,D215,D404,D405,D406,D407,D408,D409,D410,D411,D413,D415
match-dir = (?!tests)(?!migrations).*

[pep8]
max-line-length = 100
ignore = E203,W503

[pycodestyle]
max-line-length = 100
ignore = E203,W503 